#!/bin/bash
function type_effect() {
    local text="$1"
    local delay=0.05  

    for (( i=0; i<${#text}; i++ )); do
        echo -n "${text:$i:1}"
        sleep $delay
    done
    echo ""
}
function display_intro() {
        echo -e "\033[1;32m"
        type_effect "============================="
        type_effect "|                           |"
        type_effect "| ~ Welcome to TideityIQ! ~ |"
        type_effect "|                           |"
        type_effect "============================="
        type_effect "Initiating... Please wait while we get your code together."
        sleep 1 
        
        echo -e "\033[1;33m"
        cat << 'EOF'
         ._                __.
        / \"-.          ,-",'/ 
       (   \ ,"--.__.--".,' /  
       =---Y(_i.-'  |-.i_)---=
      f ,  "..'/\\v/|/|/\  , l
      l//  ,'|/   V / /||  \\j
       "--; / db     db|/---"
          | \ YY   , YY//
          '.\>_   (_),"' __
        .-"    "-.-." I,"  `.
        \.-""-. ( , ) ( \   |
        (     l  `"'  -'-._j 
 __,---_ '._." .  .    \
(__.--_-'.  ,  :  '  \  '-.
    ,' .'  /   |   \  \  \ "-
     "--.._____t____.--'-""'
            /  /  `. ".
           / ":     \' '.
         .'  (       \   : 
         |    l      j    "-.
         l_;_;I      l____;_I
EOF
        echo -e "\033[0m"

        sleep 1
        echo -e "\033[1;31m" 
        type_effect "Welcome to TideityIQ (tdq), where your code meets its reckoning!"
        type_effect "TideityIQ will analyze your JavaScript functions, one at a time, to determine their time complexity."
        sleep 0.5
        echo -e "\033[0m" 

        echo -e "\033[1;32m"
        type_effect "TideityIQ is here to help you analyze your recursive code... because we know you can't."
        type_effect "Itâ€™s about time you let a tool handle the tough stuff."
        sleep 0.5
        echo -e "\033[1;32m"

        type_effect "So sit back, relax, and let tdq tear apart your code and give you the insights you need."
        type_effect "Maybe, just maybe, you'll finally understand what's going on under the hood."
        echo -e "\033[0m"
        echo
}
MAKE_FILE="Makefile"
EXEC="tdq"
INSTALL_DIR="/usr/local/bin"
function start() {
     if [ "$#" -eq 0 ] || [[ "$1" == "tdq" ]]; then
        display_intro
        return
    else
        echo "Analyzing file: $1"
        ./tdq "$1"
    fi
}
start "$@"